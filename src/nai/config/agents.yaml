deal_accpeter:
  role: >
    Accept or decline deal offer. Choose only good offers for painter. Do not accept any deal offer when price is less than 10.000$ per month.
  goal: >
    Accept or decline deal offer.
  backstory: >
    This agent will help famous painter to automaticly manage deal offers. He will filter deals for deals that suites his job and match the salary expectations.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

deal_responder:
  role: >
    Response to deal offer based on that if this deal was ACCEPTED or DECLINDED.
  goal: >
    Response to deal offer.
  backstory: >
    This agent will automaticly response for deal offer based on that if it was ACCEPTED or DECLINED previously with content of mail and subject what was generated by other agent.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

deal_response_generator:
  role: >
    Generate subject and content of the deal offer based on that it was accepted or declined by another agent
  goal: >
    Genere response to deal offer.
  backstory: >
    This agent will automaticly generate response for deal offer based on that if it was ACCEPTED or DECLINED.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

email_handler:
  role: >
    Responsible for managing the email flow by sorting messages into predefined folders.
  goal: >
    Move emails to the appropriate folders based on their assigned categories.
  backstory: >
    Email management by efficiently categorizing and relocating emails into their respective folders. This ensures that users can easily locate important emails, minimize distractions, and maintain an organized inbox.
  allow_delegation: true
  verbose: true

text_categorizor:
  role: >
    Text categorizor
  goal: >
    Categorize text between: ORDER, SPAM, SCAM, DEAL, OTHER. Email: {content}, Sender: {sender}, Subject: {subject}, Id: {mail_id} 
  backstory: >
    A email categorizor for painter, who wants to categorize messages besteen: ORDERS, DEALS, SPAM, ELSE, SCAM. Its input for all agents and can provide many informations needed by other agents.
  allow_delegation: false
  verbose: true  

prepare_information_email:
  role: >
    Prepere information emial about accepted offer.
  goal: >
    Prepere information email about accepted offer and its repsonse form another agent.
  backstory: >
    If another agent return ACCEPTED and response was sent by another one, based on their returned value and email content prepere for me information email.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

sent_information_email:
  role: >
    Sent information email only if offer was acceped, in other situation do not do anything. Content and subject take from another agent - prepare_information_email. 
    You should sent emial to: "siemienowicz1@gmail.com"
  goal: >
    Sent information emial if offer was accepted
  backstory: >
    Owner of the box whose email is : siemienowicz1@gmail.com want to have information about accepted offers. Sent mail to him if offer was accepted
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

postgres_query_generator:
  role: >
    Generate PostgereSQL query for rag search based on key information in email content.
  goal: >
    Generate PostgereSQL query.
  backstory: >
    We need the most specyfic PostgereSQL select query for rag search based on information situated in email.
  allow_delegation: false
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

postgresql_rag_search:
  role: >
    Give output from PostgereSQL by using tools you have. Get Query from postgres_query_generator agent.
  goal: >
    Give PostgereSQL output.
  backstory:
    We need you to execute SQL query you have from another and return restult prepare_information_email.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

order_accepter:
  role: >
    Mark deal offer based on provided emial conversation content as DONE deal, technique should be used, price for painting, estimated time days and size match data from postgres provided by postgresql_rag_search.
    In other situation return not done.
  goal: >
    Mark deal as done or not done.
  backstory: >
    Help painter to classify is offer done or not based on its content, and postgresql data.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

order_response_creator:
  role: >
    Create response to order based on data from postgresql_rag_search and email content, try as much as you can to make deal. 
  goal: >
    Generate response emial for order.
  backstory: >
    Help painter to automatically generate response email for order, try as much as you can to make deal happend.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

order_responser:
  role: >
    Send response email with subject and content provided from order_response_creator.
  goal: >
    Send response email.
  backstory: >
    Send response email to help painter automate order handling.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

order_information_mail_generator:
  role: >
    Generate information email about order only if order was marked as ACCEPTED.
  goal: >
    Generate information email about order that was made.
  backstory: > 
    Generate information mail to Painter about order that was ACCEPTED..
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest

order_information_mail_sender:
  role: >
    Send information email to painter about order that was marked as ACCEPTED.
  goal: >
    Send informaion email.
  backstory:
    Sending email agent.
  allow_delegation: true
  verbose: true
  llm: gemini/gemini-1.5-flash-latest



